# GitHub Actions workflow
# https://help.github.com/en/actions/reference

name: Build

on:
  push:
    branches:
      - master
      - release/*
    tags:
      - release/*
  pull_request:
    branches:
      - master
      - release/*

env:
  # Minimize noise from dotnet CLI
  DOTNET_NOLOGO: 1

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:

      - name: Check Out Code
        uses: actions/checkout@v2

      - name: Configure .NET Core 3.1
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Stamp Version
        id: stamp
        run: >
          dotnet build .root.targets -c Release
          -p:StampOnBuild=true
          -p:Branch=${{ github.ref }}
          -p:Counter=${{ github.run_number }}
          -p:RepositoryCommit=${{ github.sha }}

      - name: Restore NuGet Packages
        run: dotnet restore

      - name: Build
        run: >
          dotnet build --no-restore -c Release
          -p:PackageOutputPath=${{ runner.temp }}\dist

      - name: Test
        run: >
          dotnet test --no-build -c Release
          --settings Coverlet.runsettings
          --results-directory:${{ runner.temp }}\coverage\raw

      - name: Prepare Coverage Report
        uses: danielpalme/ReportGenerator-GitHub-Action@4.7.1
        #url: https://github.com/danielpalme/ReportGenerator-GitHub-Action
        with:
          reports: ${{ runner.temp }}\coverage\raw\**\coverage.opencover.xml
          targetdir: ${{ runner.temp }}\coverage
          reporttypes: Cobertura;HtmlInline;Badges;TeamCitySummary
          verbosity: Warning

      - name: Save Package
        uses: actions/upload-artifact@v2
        with:
          name: Packages
          path: ${{ runner.temp }}\dist
          if-no-files-found: error

      - name: Save Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: Coverage Report
          path: ${{ runner.temp }}\coverage
          if-no-files-found: error

      - name: Publish Package
        if: startsWith(github.ref, 'refs/tags/release/')
        shell: pwsh
        run: >
          dotnet nuget push "${{ runner.temp }}\dist\*.nupkg"
          -s https://api.nuget.org/v3/index.json
          -k $env:NUGET_API_KEY
          --skip-duplicate
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
